// <auto-generated />
using System;
using BugTracker_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BugTrackerAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230202101254_Seed10BugsAnd10Users")]
    partial class Seed10BugsAnd10Users
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BugTracker_API.Models.Bug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Bugs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 2, 2, 10, 12, 54, 607, DateTimeKind.Local).AddTicks(1916),
                            Description = "TestDescription1",
                            Status = 0,
                            Title = "TestTitle1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 2, 2, 10, 12, 54, 607, DateTimeKind.Local).AddTicks(1992),
                            Description = "TestDescription2",
                            Status = 0,
                            Title = "TestTitle2",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 2, 2, 10, 12, 54, 607, DateTimeKind.Local).AddTicks(2009),
                            Description = "TestDescription3",
                            Status = 0,
                            Title = "TestTitle3",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2023, 2, 2, 10, 12, 54, 607, DateTimeKind.Local).AddTicks(2027),
                            Description = "TestDescription4",
                            Status = 0,
                            Title = "TestTitle4",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2023, 2, 2, 10, 12, 54, 607, DateTimeKind.Local).AddTicks(2046),
                            Description = "TestDescription5",
                            Status = 0,
                            Title = "TestTitle5",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2023, 2, 2, 10, 12, 54, 607, DateTimeKind.Local).AddTicks(2064),
                            Description = "TestDescription6",
                            Status = 0,
                            Title = "TestTitle6",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2023, 2, 2, 10, 12, 54, 607, DateTimeKind.Local).AddTicks(2080),
                            Description = "TestDescription7",
                            Status = 0,
                            Title = "TestTitle7",
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2023, 2, 2, 10, 12, 54, 607, DateTimeKind.Local).AddTicks(2132),
                            Description = "TestDescription8",
                            Status = 0,
                            Title = "TestTitle8",
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2023, 2, 2, 10, 12, 54, 607, DateTimeKind.Local).AddTicks(2150),
                            Description = "TestDescription9",
                            Status = 0,
                            Title = "TestTitle9",
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2023, 2, 2, 10, 12, 54, 607, DateTimeKind.Local).AddTicks(2168),
                            Description = "TestDescription10",
                            Status = 0,
                            Title = "TestTitle10",
                            UserId = 10
                        });
                });

            modelBuilder.Entity("BugTracker_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserName = "TestUsername1"
                        },
                        new
                        {
                            Id = 2,
                            UserName = "TestUsername2"
                        },
                        new
                        {
                            Id = 3,
                            UserName = "TestUsername3"
                        },
                        new
                        {
                            Id = 4,
                            UserName = "TestUsername4"
                        },
                        new
                        {
                            Id = 5,
                            UserName = "TestUsername5"
                        },
                        new
                        {
                            Id = 6,
                            UserName = "TestUsername6"
                        },
                        new
                        {
                            Id = 7,
                            UserName = "TestUsername7"
                        },
                        new
                        {
                            Id = 8,
                            UserName = "TestUsername8"
                        },
                        new
                        {
                            Id = 9,
                            UserName = "TestUsername9"
                        },
                        new
                        {
                            Id = 10,
                            UserName = "TestUsername10"
                        });
                });

            modelBuilder.Entity("BugTracker_API.Models.Bug", b =>
                {
                    b.HasOne("BugTracker_API.Models.User", "User")
                        .WithMany("Bugs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BugTracker_API.Models.User", b =>
                {
                    b.Navigation("Bugs");
                });
#pragma warning restore 612, 618
        }
    }
}
